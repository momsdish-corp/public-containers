name: 'Test Image on Pull Request'

on:
  workflow_dispatch:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - '.github/**'

concurrency:
  group: pull-request-${{ github.event.number }}
  cancel-in-progress: true

jobs:
  get-changed-containers:
    timeout-minutes: 3
    runs-on: ubuntu-22.04
    outputs:
      CHANGED_DIRS_JSON: ${{ steps.changed-dirs.outputs.CHANGED_DIRS_JSON }}

    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Get list of changed directories
        id: changed-dirs
        run: |
          # Get the changed directories in /containers/*, one per line
          FOUND_FILES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...origin/${{ github.event.pull_request.head.ref }} './containers/*/**')
          FOUND_DIRS=$(echo "$FOUND_FILES" | awk -F/ 'NF>2 {print $1"/"$2"/"$3}' | sort -u)
          echo "Found dirs: $FOUND_DIRS"
          
          # Require no spaces in directory names
          if [[ "$FOUND_DIRS" =~ \  ]]; then
            echo "ERROR: Directory names cannot contain spaces"
            exit 1
          fi
          
          # Filter out non-existing directories
          CHANGED_DIRS=""
          while IFS= read -r dir; do
            if [ -d "$dir" ]; then
              [ -z "$CHANGED_DIRS" ] && CHANGED_DIRS="$dir" || CHANGED_DIRS="$CHANGED_DIRS $dir"
            fi
          done <<< "$FOUND_DIRS"
          echo "Changed dirs: $CHANGED_DIRS"
                   
          # Put each directory in a JSON array
          if [ -z "$CHANGED_DIRS" ]; then
            CHANGED_DIRS_JSON="[]"
          else
            CHANGED_DIRS_JSON=$(echo -e "$CHANGED_DIRS" | jq -R . | jq -cs .)
          fi
          # Returns /containers/<container>/<version> for each changed directory
          echo "CHANGED_DIRS_JSON=$CHANGED_DIRS_JSON" >> $GITHUB_OUTPUT
          echo "Changed dirs JSON: $CHANGED_DIRS_JSON"
  test-container:
    if: ${{ needs.get-changed-containers.outputs.CHANGED_DIRS_JSON != '[]' }}
    needs:
      - get-changed-containers
    runs-on: ubuntu-22.04
    timeout-minutes: 6
    strategy:
      fail-fast: false
      max-parallel: 2
      matrix:
        CONTAINER_DIR: ${{ fromJson(needs.get-changed-containers.outputs.CHANGED_DIRS_JSON) }}
    steps:
      - name: Checkout files
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}
      - name: Run Docker Compose
        run: |
          cd ${{ matrix.CONTAINER_DIR }}
          echo "Running docker compose up --build --abort-on-container-exit"
          docker compose up --build --abort-on-container-exit